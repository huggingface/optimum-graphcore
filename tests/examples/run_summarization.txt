34a35,37
> from optimum.graphcore import IPUConfig, IPUSeq2SeqTrainer
> from optimum.graphcore import IPUSeq2SeqTrainingArguments as Seq2SeqTrainingArguments
> from optimum.graphcore.utils import check_min_version
45,46d47
<     Seq2SeqTrainer,
<     Seq2SeqTrainingArguments,
50c51,52
< from transformers.utils import check_min_version, is_offline_mode, send_example_telemetry
---
> from transformers.utils import check_min_version as tf_check_min_version
> from transformers.utils import is_offline_mode, send_example_telemetry
55c57,60
< check_min_version("4.25.0")
---
> tf_check_min_version("4.25.0")
> 
> # Will error if the minimal version of Optimum Graphcore is not installed. Remove at your own risks.
> check_min_version("0.2.4.dev0")
324,328d328
<     # Log on each process the small summary:
<     logger.warning(
<         f"Process rank: {training_args.local_rank}, device: {training_args.device}, n_gpu: {training_args.n_gpu}"
<         + f"distributed training: {bool(training_args.local_rank != -1)}, 16-bits training: {training_args.fp16}"
<     )
408a409,414
>     ipu_config = IPUConfig.from_pretrained(
>         training_args.ipu_config_name if training_args.ipu_config_name else model_args.model_name_or_path,
>         cache_dir=model_args.cache_dir,
>         revision=model_args.model_revision,
>         use_auth_token=True if model_args.use_auth_token else None,
>     )
602c608
<         pad_to_multiple_of=8 if training_args.fp16 else None,
---
>         pad_to_multiple_of=None,
638c644
<     trainer = Seq2SeqTrainer(
---
>     trainer = IPUSeq2SeqTrainer(
639a646
>         ipu_config=ipu_config,
