31a32,33
> from optimum.graphcore import IPUConfig, IPUTrainer
> from optimum.graphcore import IPUTrainingArguments as TrainingArguments
39,40d40
<     Trainer,
<     TrainingArguments,
186,190d185
<     # Log on each process the small summary:
<     logger.warning(
<         f"Process rank: {training_args.local_rank}, device: {training_args.device}, n_gpu: {training_args.n_gpu}"
<         + f"distributed training: {bool(training_args.local_rank != -1)}, 16-bits training: {training_args.fp16}"
<     )
244a240,245
>     ipu_config = IPUConfig.from_pretrained(
>         training_args.ipu_config_name if training_args.ipu_config_name else model_args.model_name_or_path,
>         cache_dir=model_args.cache_dir,
>         revision=model_args.model_revision,
>         use_auth_token=True if model_args.use_auth_token else None,
>     )
332,333d332
<     elif training_args.fp16:
<         data_collator = DataCollatorWithPadding(tokenizer, pad_to_multiple_of=8)
338c337
<     trainer = Trainer(
---
>     trainer = IPUTrainer(
339a339
>         ipu_config=ipu_config,
